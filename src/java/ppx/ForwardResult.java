// automatically generated by the FlatBuffers compiler, do not modify

package ppx;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")public final class ForwardResult extends Table {
  public static ForwardResult getRootAsForwardResult(ByteBuffer _bb) { return getRootAsForwardResult(_bb, new ForwardResult()); }
  public static ForwardResult getRootAsForwardResult(ByteBuffer _bb, ForwardResult obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ForwardResult __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Tensor output() { return output(new Tensor()); }
  public Tensor output(Tensor obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createForwardResult(FlatBufferBuilder builder,
      int outputOffset) {
    builder.startObject(1);
    ForwardResult.addOutput(builder, outputOffset);
    return ForwardResult.endForwardResult(builder);
  }

  public static void startForwardResult(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addOutput(FlatBufferBuilder builder, int outputOffset) { builder.addOffset(0, outputOffset, 0); }
  public static int endForwardResult(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

